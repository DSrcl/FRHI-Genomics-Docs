{
  "resourceType": "StructureDefinition",
  "id": "elementdefinition-de-dataelement",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-de-dataelement",
  "name": "DataElement constraint on ElementDefinition data type",
  "publisher": "Health Level Seven International (Orders and Observations)",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://hl7.org/special/committees/FHIR"
        }
      ]
    }
  ],
  "description": "Identifies how the ElementDefinition data type is used when it appears within a data element",
  "status": "draft",
  "date": "2015-02-28",
  "kind": "resource",
  "constrainedType": "ElementDefinition",
  "abstract": false,
  "base": "http://hl7.org/fhir/StructureDefinition/ElementDefinition",
  "snapshot": {
    "element": [
      {
        "path": "ElementDefinition",
        "name": "dataelement",
        "short": "Definition of an elements in a resource or extension",
        "definition": "Captures constraints on each element within the resource, profile, or extension.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "ElementDefinition"
          }
        ],
        "constraint": [
          {
            "key": "eld-2",
            "severity": "error",
            "human": "Min <= Max",
            "xpath": "(not(f:max/@value) and not(f:min/@value)) or (f:max/@value = '*') or (f:max/@value >= f:min/@value)"
          },
          {
            "key": "eld-5",
            "severity": "error",
            "human": "Either a namereference or a fixed value (but not both) is permitted",
            "xpath": "not(exists(f:nameReference) and exists(f:*[starts-with(local-name(.), 'value')]))"
          },
          {
            "key": "eld-7",
            "severity": "error",
            "human": "Pattern may only be specified if there is one type",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or (count(f:type)=1 )"
          },
          {
            "key": "eld-6",
            "severity": "error",
            "human": "Fixed value may only be specified if there is one type",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or (count(f:type)=1 )"
          },
          {
            "key": "eld-11",
            "severity": "error",
            "human": "Binding can only be present for coded elements, string, and uri",
            "xpath": "not(exists(f:binding)) or (count(f:type/f:code) = 0) or  f:type/f:code/@value=('code','Coding','CodeableConcept','Quantity','Extension', 'string', 'uri')"
          },
          {
            "key": "eld-8",
            "severity": "error",
            "human": "Pattern and value are mutually exclusive",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'pattern')])) or not(exists(f:*[starts-with(local-name(.), 'value')]))"
          },
          {
            "key": "eld-14",
            "severity": "error",
            "human": "Constraints must be unique by key",
            "xpath": "count(f:constraint) = count(distinct-values(f:constraint/f:key/@value))"
          },
          {
            "key": "eld-13",
            "severity": "error",
            "human": "Types must be unique by the combination of code and profile",
            "xpath": "not(exists(for $type in f:type return $type/preceding-sibling::f:type[f:code/@value=$type/f:code/@value and f:profile/@value = $type/f:profile/@value]))"
          },
          {
            "key": "eld-15",
            "severity": "error",
            "human": "default value and meaningWhenMissing are mutually exclusive",
            "xpath": "not(exists(f:*[starts-with(local-name(.), 'fixed')])) or not(exists(f:meaningWhenMissing))"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "RetrieveMetadata response"
          },
          {
            "identity": "v2",
            "map": "OM1"
          },
          {
            "identity": "rim",
            "map": "Observation[classCode=OBS, moodCode=DEFN]"
          }
        ]
      },
      {
        "path": "ElementDefinition.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        },
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "Question",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
            ]
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "AllowedUnits",
        "short": "Extension",
        "definition": "An Extension",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
            ]
          }
        ]
      },
      {
        "path": "ElementDefinition.path",
        "short": "The path of the element (see the Detailed Descriptions)",
        "definition": "The path identifies the element and is expressed as a \".\"-separated list of ancestor elements, beginning with the name of the resource or extension.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.path",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.representation",
        "short": "How this element is represented in instances",
        "definition": "Codes that define how this element is represented in instances, when the deviation varies from the normal case.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.representation",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "How a property is represented on the wire",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/property-representation"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.name",
        "short": "Name for this particular element definition (reference target)",
        "definition": "The name of this element definition (to refer to it from other element definitions using ElementDefinition.nameReference). This is a unique name referring to a specific set of constraints applied to this element. One use of this is to provide a name to different slices of the same element.",
        "requirements": "Allows referencing a defined element.  May also be used for code generation purposes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.name",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.label",
        "short": "Name for element to display with or prompt for element",
        "definition": "The text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.label",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "./code/display"
          }
        ]
      },
      {
        "path": "ElementDefinition.code",
        "short": "Defining code",
        "definition": "A code that provides the meaning for the element according to a particular terminology.",
        "requirements": "Links the meaning of an element to an external terminology.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.code",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.7"
          },
          {
            "identity": "rim",
            "map": "./code (root or translation)"
          },
          {
            "identity": "loinc",
            "map": "LOINC_NUM"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing",
        "short": "This element is sliced - slices follow",
        "definition": "Indicates that the element is sliced into a set of alternative definitions (there are multiple definitions on a single element in the base resource). The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.slicing",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "constraint": [
          {
            "key": "eld-1",
            "severity": "error",
            "human": "If there are no discriminators, there must be a definition",
            "xpath": "(f:discriminator) or (f:definition)"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.slicing.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.slicing.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.discriminator",
        "short": "Element values that used to distinguish the slices",
        "definition": "Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.slicing.discriminator",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.description",
        "short": "Text description of how slicing works (or not)",
        "definition": "A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.slicing.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.ordered",
        "short": "If elements must be in same order as slices",
        "definition": "If the matching elements have to occur in the same order as defined in the profile.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.slicing.ordered",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.slicing.rules",
        "short": "closed | open | openAtEnd",
        "definition": "Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.slicing.rules",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "How slices are interpreted when evaluating an instance",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/resource-slicing-rules"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.short",
        "short": "Concise definition for xml presentation",
        "definition": "A concise definition that  is shown in the generated XML format that summarizes profiles (used throughout the specification).",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.short",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.definition",
        "short": "Full formal definition as narrative text",
        "definition": "Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource.",
        "requirements": "To allow a user to state the usage of an element in a particular context.",
        "alias": [
          "Description"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.definition",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.6, OM1.41"
          },
          {
            "identity": "rim",
            "map": "./text"
          },
          {
            "identity": "loinc",
            "map": "TERM DEFINITION/DESCRIPTION(S)"
          }
        ]
      },
      {
        "path": "ElementDefinition.comments",
        "short": "Comments about the use of this element",
        "definition": "Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.comments",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "NTE, OM.32, OM1.33, OM1.39"
          },
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=SUBJ]/source[classCode=LIST, moodCode=EVN]/code"
          },
          {
            "identity": "loinc",
            "map": "COMMENTS"
          }
        ]
      },
      {
        "path": "ElementDefinition.requirements",
        "short": "Why is this needed?",
        "definition": "This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.requirements",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[typeCode=META]/source[classCode=ACT, moodCode=EVN, isCriterionInd=true]/reasonCode/originalText"
          },
          {
            "identity": "loinc",
            "map": "R/O/C"
          }
        ]
      },
      {
        "path": "ElementDefinition.alias",
        "short": "Other names",
        "definition": "Identifies additional names by which this element might also be known.",
        "requirements": "Allows for better easier recognition of the element by multiple communities, including international communities.",
        "alias": [
          "synonym",
          "other name"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.alias",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.8, OM1.52"
          },
          {
            "identity": "rim",
            "map": "Not currently expressible"
          },
          {
            "identity": "loinc",
            "map": "RELATED NAMES (only some of these apply)"
          }
        ]
      },
      {
        "path": "ElementDefinition.min",
        "short": "Minimum Cardinality",
        "definition": "The minimum number of times this element SHALL appear in the instance.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.min",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "condition": [
          "eld-2"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.max",
        "short": "Maximum Cardinality (a number or *)",
        "definition": "The maximum number of times this element is permitted to appear in the instance.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.max",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-3",
          "eld-2"
        ],
        "constraint": [
          {
            "key": "eld-3",
            "severity": "error",
            "human": "Max SHALL be a number or \"*\"",
            "xpath": "@value='*' or (normalize-space(@value)!='' and normalize-space(translate(@value, '0123456789',''))='')"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.base",
        "short": "Base definition information for tools",
        "definition": "Information about the base definition of the element, provided to make it unncessary for tools to trace the derviation of the element through the derived and related profiles. This information is only provided where the element definition represents a constraint on another element definition, and must be present if there is a base element definition.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.base.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.base.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.base.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.base.path",
        "short": "Path that identifies the base element",
        "definition": "The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.path",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.base.min",
        "short": "Min cardinality of the base element",
        "definition": "Minimum cardinality of the base element identified by the path.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.min",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.base.max",
        "short": "Max cardinality of the base element",
        "definition": "Maximum cardinality of the base element identified by the path.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.base.max",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type",
        "short": "Data type and Profile for this element",
        "definition": "The data type or resource that the value of this element is permitted to be.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.type",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "condition": [
          "eld-13"
        ],
        "constraint": [
          {
            "key": "eld-4",
            "severity": "error",
            "human": "Aggregation may only be specified if one of the allowed types for the element is a resource",
            "xpath": "not(exists(f:aggregation)) or exists(f:code[@value = 'Reference'])"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.dataType"
          },
          {
            "identity": "v2",
            "map": "OM1.3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.type.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.type.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.code",
        "short": "Name of Data type or Resource",
        "definition": "Name of Data type or Resource that is a(or the) type used for this element.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.type.code",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "The type of an element - one of the FHIR data types",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/data-types"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "OM1.3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "HL7_V2_DATATYPE (translation required), HL7_V3_DATATYPE (translation required)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.profile",
        "short": "Profile (StructureDefinition) to apply",
        "definition": "Identifies a profile structure that SHALL hold for resources or datatypes referenced as the type of this element. Can be a local reference - to another structure in this profile, or a reference to a structure in another profile. When more than one profile is specified, the content must conform to all of them.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.type.profile",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.type.aggregation",
        "short": "contained | referenced | bundled - how aggregated",
        "definition": "If the type is a reference to another resource, how the resource is or can be aggreated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.type.aggregation",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "condition": [
          "eld-4"
        ],
        "binding": {
          "strength": "required",
          "description": "How resource references can be aggregated",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/resource-aggregation-mode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.nameReference",
        "short": "To another element constraint (by element.name)",
        "definition": "Identifies the name of a slice defined elsewhere in the profile whose constraints should be applied to the current element.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.nameReference",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-5"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.defaultValue[x]",
        "short": "Specified value it missing from instance",
        "definition": "The value that should be used if there is no value stated in the instance.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.defaultValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-15"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.meaningWhenMissing",
        "short": "Implicit meaning when this element is missing",
        "definition": "The Implicit meaning that is to be understood when this element is missing.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.meaningWhenMissing",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-15"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.fixed[x]",
        "short": "Value must be exactly this",
        "definition": "Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-signficant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.fixed[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-5",
          "eld-6",
          "eld-8"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.pattern[x]",
        "short": "Value must have at least these property values",
        "definition": "Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-senstive, accent-sensitive, etc.).",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.pattern[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "condition": [
          "eld-5",
          "eld-7",
          "eld-8"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.example[x]",
        "short": "Example value: [as defined for type]",
        "definition": "A sample value for this element demonstrating the type of information that would typically be captured.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.example[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "EXMPL_ANSWERS"
          }
        ]
      },
      {
        "path": "ElementDefinition.minValue[x]",
        "short": "Minimum Allowed Value (for some types)",
        "definition": "The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.minValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.maxValue[x]",
        "short": "Maximum Allowed Value (for some types)",
        "definition": "The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.maxValue[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "*"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.maxLength",
        "short": "Max length for strings",
        "definition": "Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.maxLength",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "integer"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.condition",
        "short": "Reference to invariant about presence",
        "definition": "A reference to an invariant that may make additional statements about the cardinality or value in the instance.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.condition",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "id"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint",
        "short": "Condition that must evaluate to true",
        "definition": "Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.constraint",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.constraint.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.key",
        "short": "Target of 'condition' reference above",
        "definition": "Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.key",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "condition": [
          "eld-14"
        ]
      },
      {
        "path": "ElementDefinition.constraint.requirements",
        "short": "Why this constraint necessary or appropriate",
        "definition": "Description of why this constraint is necessary or appropriate.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.requirements",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.severity",
        "short": "error | warning",
        "definition": "Identifies the impact constraint violation has on the conformance of the instance.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.severity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "SHALL applications comply with this constraint?",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/constraint-severity"
          }
        }
      },
      {
        "path": "ElementDefinition.constraint.human",
        "short": "Human description of constraint",
        "definition": "Text that can be used to describe the constraint in messages identifying that the constraint has been violated.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.human",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "ElementDefinition.constraint.xpath",
        "short": "XPath expression of constraint",
        "definition": "An XPath expression of constraint that can be executed to see if this constraint is met.",
        "requirements": "Used in Schematron tests of the validity of the resource.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.constraint.xpath",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "ElementDefinition.mustSupport",
        "short": "If the element must supported",
        "definition": "If true, conformant resource authors SHALL be capable of providing a value for the element and resource consumers SHALL be capable of extracting and doing something useful with the data element.  If false, the element may be ignored and not supported.",
        "requirements": "Allows a profile to set expectations for system capabilities beyond merely respecting cardinality constraints.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mustSupport",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.isModifier",
        "short": "If this modifies the meaning of other elements",
        "definition": "If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.",
        "requirements": "Allows elements to be introduced into a specification that can't safely be ignored by applications that don't recognize them.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.isModifier",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.isSummary",
        "short": "Include when _summary = true?",
        "definition": "Whether the element should be included if a client requests a search with the parameter _summary=true.",
        "requirements": "Allow clients to search through large resources quickly.",
        "min": 0,
        "max": "0",
        "base": {
          "path": "ElementDefinition.isSummary",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false
      },
      {
        "path": "ElementDefinition.binding",
        "short": "ValueSet details if this is coded",
        "definition": "Binds to a value set if this element is coded (code, Coding, CodeableConcept).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "condition": [
          "eld-11"
        ],
        "constraint": [
          {
            "key": "eld-10",
            "severity": "error",
            "human": "provide either a reference or a description (or both)",
            "xpath": "(exists(f:valueSetUri) or exists(f:valueSetReference)) or exists(f:description)"
          },
          {
            "key": "eld-9",
            "severity": "error",
            "human": "Example value sets are always extensible",
            "xpath": "not(f:conformance/@value='example' and f:isExtensible/@value='false')"
          }
        ],
        "mapping": [
          {
            "identity": "v2",
            "map": "OM3"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "ANSWER LIST, NORMATIVE ANSWER LIST"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.binding.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.strength",
        "short": "required | extensible | preferred | example",
        "definition": "Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.",
        "alias": [
          "conformance",
          "extensibility"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.strength",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "Indication of the degree of conformance expectations associated with a binding",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/binding-strength"
          }
        },
        "mapping": [
          {
            "identity": "v2",
            "map": "N/A"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.description",
        "short": "Human explanation of the value set",
        "definition": "Describes the intended use of this particular set of codes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.description",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "condition": [
          "eld-10"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.binding.valueSet[x]",
        "short": "Source of value set",
        "definition": "Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.binding.valueSet[x]",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/ValueSet"
            ]
          }
        ],
        "condition": [
          "eld-10",
          "eld-12"
        ],
        "constraint": [
          {
            "key": "eld-12",
            "severity": "error",
            "human": "uri SHALL start with http:// or https://",
            "xpath": "starts-with(@value, 'http:') or starts-with(@value, 'https:')"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "valueDomain.valueSet"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          },
          {
            "identity": "loinc",
            "map": "CODE_TABLE"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping",
        "short": "Map element to another set of definitions",
        "definition": "Identifies a concept from an external specification that roughly corresponds to this element.",
        "requirements": "Provides guidance to implementers familiar with or converting content from other specifications.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.mapping",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Element"
          }
        ],
        "mapping": [
          {
            "identity": "dex",
            "map": "mappingSpecification"
          },
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "ElementDefinition.mapping.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.identity",
        "short": "Reference to mapping declaration",
        "definition": "An internal reference to the definition of a mapping.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.identity",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.language",
        "short": "Computable language of mapping",
        "definition": "Identifies the computable language in which mapping.map is expressed.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "The mime type of an attachment",
          "valueSetUri": "http://www.rfc-editor.org/bcp/bcp13.txt"
        },
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      },
      {
        "path": "ElementDefinition.mapping.map",
        "short": "Details of the mapping",
        "definition": "Expresses what part of the target specification corresponds to this element.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "ElementDefinition.mapping.map",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A (MIF territory)"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "ElementDefinition",
        "name": "dataelement",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "ElementDefinition"
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "slicing": {
          "discriminator": [
            "url"
          ],
          "ordered": false,
          "rules": "open"
        }
      },
      {
        "path": "ElementDefinition.extension",
        "name": "Question",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-question"
            ]
          }
        ]
      },
      {
        "path": "ElementDefinition.extension",
        "name": "AllowedUnits",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Extension",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/elementdefinition-allowedUnits"
            ]
          }
        ]
      },
      {
        "path": "ElementDefinition.path"
      },
      {
        "path": "ElementDefinition.representation",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.name"
      },
      {
        "path": "ElementDefinition.label"
      },
      {
        "path": "ElementDefinition.code"
      },
      {
        "path": "ElementDefinition.slicing",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.discriminator",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.description",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.ordered",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.slicing.rules",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.short",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.definition"
      },
      {
        "path": "ElementDefinition.comments"
      },
      {
        "path": "ElementDefinition.requirements"
      },
      {
        "path": "ElementDefinition.alias"
      },
      {
        "path": "ElementDefinition.min"
      },
      {
        "path": "ElementDefinition.max"
      },
      {
        "path": "ElementDefinition.type"
      },
      {
        "path": "ElementDefinition.type.code"
      },
      {
        "path": "ElementDefinition.type.profile",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.type.aggregation",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.nameReference",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.defaultValue[x]"
      },
      {
        "path": "ElementDefinition.meaningWhenMissing"
      },
      {
        "path": "ElementDefinition.fixed[x]",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.pattern[x]",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.example[x]"
      },
      {
        "path": "ElementDefinition.maxLength"
      },
      {
        "path": "ElementDefinition.condition"
      },
      {
        "path": "ElementDefinition.constraint"
      },
      {
        "path": "ElementDefinition.constraint.name"
      },
      {
        "path": "ElementDefinition.constraint.key"
      },
      {
        "path": "ElementDefinition.constraint.severity"
      },
      {
        "path": "ElementDefinition.constraint.human"
      },
      {
        "path": "ElementDefinition.constraint.xpath"
      },
      {
        "path": "ElementDefinition.mustSupport"
      },
      {
        "path": "ElementDefinition.isModifier",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.isSummary",
        "min": 0,
        "max": "0"
      },
      {
        "path": "ElementDefinition.binding"
      },
      {
        "path": "ElementDefinition.binding.strength"
      },
      {
        "path": "ElementDefinition.binding.description"
      },
      {
        "path": "ElementDefinition.binding.valueSet[x]"
      },
      {
        "path": "ElementDefinition.mapping"
      },
      {
        "path": "ElementDefinition.mapping.identity"
      },
      {
        "path": "ElementDefinition.mapping.language"
      },
      {
        "path": "ElementDefinition.mapping.map"
      }
    ]
  }
}