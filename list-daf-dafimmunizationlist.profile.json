{
  "resourceType": "StructureDefinition",
  "id": "list-daf-dafimmunizationlist",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/list-daf-dafimmunizationlist",
  "name": "U.S. Data Access Framework (DAF) List Profile",
  "publisher": "Health Level Seven International (Infrastructure and Messaging - Data Access Framework)",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://www.healthit.gov"
        }
      ]
    }
  ],
  "description": "US Realm Immunization list",
  "status": "draft",
  "date": "2014-08-21",
  "kind": "resource",
  "constrainedType": "List",
  "abstract": false,
  "base": "http://hl7.org/fhir/StructureDefinition/List",
  "snapshot": {
    "element": [
      {
        "path": "List",
        "name": "DAFImmunizationList",
        "short": "US Realm Immunization list",
        "definition": "Information summarized from a list of other resources.",
        "alias": [
          "Collection",
          "WorkingList",
          "Organizer"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "List"
          }
        ],
        "constraint": [
          {
            "key": "lst-2",
            "severity": "error",
            "human": "The deleted flag can only be used if the mode of the list is \"changes\"",
            "xpath": "(f:mode/@value = 'changes') or not(exists(f:entry/f:item/f:deleted))"
          },
          {
            "key": "lst-1",
            "severity": "error",
            "human": "A list can only have an emptyReason if it is empty",
            "xpath": "not(exists(f:emptyReason) and exists(f:entry))"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act[classCode<ORG,moodCode=EVN]"
          }
        ]
      },
      {
        "path": "List.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the url for the resource. Once assigned, this value never changes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ]
      },
      {
        "path": "List.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.meta",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Meta"
          }
        ]
      },
      {
        "path": "List.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.implicitRules",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true
      },
      {
        "path": "List.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "List.text",
        "short": "Text summary of the resource, for human interpretation",
        "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.text",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "List.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "List.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "List.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "List.identifier",
        "short": "Business identifier",
        "definition": "Identifier for the List assigned for business purposes outside the context of FHIR.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.identifier",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".id"
          }
        ]
      },
      {
        "path": "List.title",
        "short": "Descriptive name for the list",
        "definition": "A label for the list assigned by the author.",
        "requirements": "Allows customization beyond just the code identifying the kind of list.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.title",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "exampleString": "Dr. Jane's Patients",
        "isSummary": true
      },
      {
        "path": "List.code",
        "short": "What the purpose of this list is",
        "definition": "Fixed code for Immunizations.",
        "requirements": "Lists often contain subsets of resources rather than an exhaustive list.  The code identifies what type of subset is included.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.code",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "fixedCodeableConcept": {
          "coding": [
            {
              "system": "http://loinc.org",
              "version": "2.48",
              "code": "11369-6"
            }
          ]
        },
        "mustSupport": true,
        "isSummary": true,
        "binding": {
          "strength": "example",
          "description": "What the purpose of a list is",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-example-codes"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".code"
          }
        ]
      },
      {
        "path": "List.subject",
        "short": "If all resources have the same subject",
        "definition": "The common subject (or patient) of the resources that are in the list, if there is one.",
        "requirements": "The primary purpose of listing the subject explicitly is to help with finding the right list.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.subject",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/patient-daf-dafpatient"
            ]
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".participation[typeCode<SUB].role\n(and sometimes .player)"
          }
        ]
      },
      {
        "path": "List.source",
        "short": "Who and/or what defined the list contents (aka Author)",
        "definition": "The entity responsible for deciding what the contents of the list were. Where the list was created by a human, this is the same as the author of the list.",
        "requirements": "Allows follow-up as well as context.",
        "alias": [
          "Author"
        ],
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.source",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/pract-daf-dafpract"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/patient-daf-dafpatient"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Device"
            ]
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".participation[typeCode<AUT].role[classCode=REL].player[classCode=PSN,determinerCode=INST]\nor\n.participation[typeCode<AUT].role[classCode=REL].player[classCode=DEV,determinerCode=INST]"
          }
        ]
      },
      {
        "path": "List.encounter",
        "short": "Context in which list created",
        "definition": "The encounter that is the context in which this list was created.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.encounter",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Encounter"
            ]
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "inboundRelationship[typeCode=COMP].source[classCode=ENC, moodCode=EVN]"
          }
        ]
      },
      {
        "path": "List.status",
        "short": "current | retired | entered-in-error",
        "definition": "Indicates the current state of this list.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.status",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "isModifier": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The current state of the list",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-status"
          }
        }
      },
      {
        "path": "List.date",
        "short": "When the list was prepared",
        "definition": "The date that the list was prepared.",
        "requirements": "Identifies how current the list is which affects relevance.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.date",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "mustSupport": true,
        "isSummary": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".participation[typeCode<AUT].time[type=TS]"
          }
        ]
      },
      {
        "path": "List.orderedBy",
        "short": "What order the list has",
        "definition": "What order applies to the items in the list.",
        "requirements": "Important for presentation and rendering.  Lists may be sorted to place more important information first or to group related entries.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.orderedBy",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "binding": {
          "strength": "preferred",
          "description": "What order applies to the items in a list",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-order"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=COMP].sequenceNumber > 1"
          }
        ]
      },
      {
        "path": "List.mode",
        "short": "working | snapshot | changes",
        "definition": "How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.",
        "requirements": "Lists are used in various ways, and it must be known in what way it is safe to use them.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.mode",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "snapshot",
        "mustSupport": true,
        "isModifier": true,
        "isSummary": true,
        "binding": {
          "strength": "required",
          "description": "The processing mode that applies to this list",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-mode"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".outBoundRelationship[typeCode=COMP].target[classCode=OBS\"].value"
          }
        ]
      },
      {
        "path": "List.note",
        "short": "Comments about the list",
        "definition": "Comments that apply to the overall list.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.note",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ]
      },
      {
        "path": "List.entry",
        "short": "Entries in the list",
        "definition": "Entries in this list.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.entry",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "condition": [
          "lst-1"
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".outboundRelationship[typeCode=COMP]\nor \n.participation[typeCode=SBJ]"
          }
        ]
      },
      {
        "path": "List.entry.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.entry.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "List.entry.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.entry.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "List.entry.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "List.entry.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "List.entry.flag",
        "short": "Workflow information about this item",
        "definition": "The flag allows the system constructing the list to make one or more statements about the role and significance of the item in the list.",
        "requirements": "This field is present to support various clinical uses of lists, such as a discharge summary medication list, where flags specify whether the medication was added, modified, or deleted from the list.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.entry.flag",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "example",
          "description": "Codes that provide further information about the reason and meaning of the item in the list",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-item-flag"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".outBoundRelationship[typeCode=COMP].target[classCode=OBS\"].value"
          }
        ]
      },
      {
        "path": "List.entry.deleted",
        "short": "If this item is actually marked as deleted",
        "definition": "True if this item is marked as deleted in the list.",
        "requirements": "The flag element may contain codes that an application processing the list does not understand. However there can be no ambiguity if a list item is actually marked as \"deleted\".",
        "min": 0,
        "max": "0",
        "base": {
          "path": "List.entry.deleted",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "boolean"
          }
        ],
        "defaultValueBoolean": false,
        "condition": [
          "lst-2"
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "added: .updateMode=(\"A\",\"AR\")\n\nretained: .updateMode=\"NC\"\n\nupdated: .updateMode=\"R\"\n\ndeleted: .updateMode=\"D\""
          }
        ]
      },
      {
        "path": "List.entry.date",
        "short": "When item added to list",
        "definition": "When this item was added to the list.",
        "requirements": "The date may be significant for understanding the meaning of items in a working list.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.entry.date",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".availabilityTime"
          }
        ]
      },
      {
        "path": "List.entry.item",
        "short": "Actual entry",
        "definition": "A reference to the actual resource from which data was derived.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "List.entry.item",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/immunization-daf-dafimmunization"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": ".target\nor\n.role\nor\n.role.entity"
          }
        ]
      },
      {
        "path": "List.emptyReason",
        "short": "Why list is empty",
        "definition": "If the list is empty, why the list is empty.",
        "requirements": "Allows capturing things like \"none exist\" or \"not asked\" which can be important for most lists.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "List.emptyReason",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "condition": [
          "lst-1"
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "If a list is empty, why it is empty",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-empty-reason"
          }
        },
        "mapping": [
          {
            "identity": "rim",
            "map": ".inboundRelationship[typeCode=SUBJ,code<{ListEmptyReason}].value[type=CD]"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "List",
        "name": "DAFImmunizationList",
        "short": "US Realm Immunization list",
        "definition": "Information summarized from a list of other resources.",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "List"
          }
        ]
      },
      {
        "path": "List.identifier",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Identifier"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.code",
        "definition": "Fixed code for Immunizations.",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "fixedCodeableConcept": {
          "coding": [
            {
              "system": "http://loinc.org",
              "version": "2.48",
              "code": "11369-6"
            }
          ]
        },
        "mustSupport": true
      },
      {
        "path": "List.subject",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/patient-daf-dafpatient"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.source",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/pract-daf-dafpract"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/patient-daf-dafpatient"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Device"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.date",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.mode",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "code"
          }
        ],
        "fixedCode": "snapshot",
        "mustSupport": true
      },
      {
        "path": "List.entry",
        "min": 0,
        "max": "*",
        "mustSupport": true
      },
      {
        "path": "List.entry.flag",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.entry.deleted",
        "min": 0,
        "max": "0",
        "type": [
          {
            "code": "boolean"
          }
        ]
      },
      {
        "path": "List.entry.date",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "dateTime"
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.entry.item",
        "min": 1,
        "max": "1",
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/immunization-daf-dafimmunization"
            ]
          }
        ],
        "mustSupport": true
      },
      {
        "path": "List.emptyReason",
        "min": 0,
        "max": "1",
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "If a list is empty, why it is empty",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/list-empty-reason"
          }
        }
      }
    ]
  }
}