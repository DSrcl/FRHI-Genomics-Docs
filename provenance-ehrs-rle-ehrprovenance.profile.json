{
  "resourceType": "StructureDefinition",
  "id": "provenance-ehrs-rle-ehrprovenance",
  "text": {
    "status": "generated",
    "div": "<div>to do</div>"
  },
  "url": "http://hl7.org/fhir/StructureDefinition/provenance-ehrs-rle-ehrprovenance",
  "name": "EHRS FM Record Lifecycle Event - Provenance",
  "publisher": "Health Level Seven International (Electronic Health Record)",
  "contact": [
    {
      "telecom": [
        {
          "system": "other",
          "value": "http://hl7.org/special/committees/ehr.html"
        }
      ]
    }
  ],
  "description": "Defines the elements to be supported within the Provenance resource in order to conform with the Electronic Health Record System Functional Model Record Lifecycle Event standard",
  "status": "draft",
  "date": "2014-01-31",
  "kind": "resource",
  "constrainedType": "Provenance",
  "abstract": false,
  "base": "http://hl7.org/fhir/StructureDefinition/Provenance",
  "snapshot": {
    "element": [
      {
        "path": "Provenance",
        "name": "EHRProvenance",
        "short": "Who, What, When for a set of resources",
        "definition": "Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g., Document Completion - has the artifact been legally authenticated), all of which may impact Security, Privacy, and Trust policies.",
        "alias": [
          "History",
          "Event",
          "Activity"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Provenance"
          }
        ],
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Activity"
          },
          {
            "identity": "rim",
            "map": "ControlAct[isNormalAct() and subsumes(CACT, classCode) and moodCode=EVN]"
          }
        ]
      },
      {
        "path": "Provenance.id",
        "short": "Logical id of this artifact",
        "definition": "The logical id of the resource, as used in the url for the resource. Once assigned, this value never changes.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ]
      },
      {
        "path": "Provenance.meta",
        "short": "Metadata about the resource",
        "definition": "The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content may not always be associated with version changes to the resource.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.meta",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Meta"
          }
        ]
      },
      {
        "path": "Provenance.implicitRules",
        "short": "A set of rules under which this content was created",
        "definition": "A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.implicitRules",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "isModifier": true
      },
      {
        "path": "Provenance.language",
        "short": "Language of the resource content",
        "definition": "The base language in which the resource is written.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.language",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "A human language",
          "valueSetUri": "http://tools.ietf.org/html/bcp47"
        }
      },
      {
        "path": "Provenance.text",
        "short": "Text summary of the resource, for human interpretation",
        "definition": "A human-readable narrative that contains a summary of the resource, and may be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it \"clinically safe\" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.",
        "alias": [
          "narrative",
          "html",
          "xhtml",
          "display"
        ],
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.text",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Narrative"
          }
        ],
        "condition": [
          "dom-1"
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "Act.text?"
          }
        ]
      },
      {
        "path": "Provenance.contained",
        "short": "Contained, inline Resources",
        "definition": "These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.",
        "alias": [
          "inline resources",
          "anonymous resources",
          "contained resources"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.contained",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Resource"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Provenance.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Provenance.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Provenance.target",
        "short": "Target Reference(s) (usually version specific)",
        "definition": "The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity.",
        "min": 1,
        "max": "*",
        "base": {
          "path": "Provenance.target",
          "min": 1,
          "max": "*"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Resource"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity Created/Updated"
          },
          {
            "identity": "rim",
            "map": "./outboundRelationship[isNormalActRelationship() and typeCode=SUBJ]/target  OR  ./participation[isNormalParticipation() and typeCode=SBJ]/role  OR  ./participation[isNormalParticipation() and typeCode=SBJ]/role[isNormalRole()]/player"
          }
        ]
      },
      {
        "path": "Provenance.period",
        "short": "When the activity occurred",
        "definition": "The period during which the activity occurred.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.period",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Period"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Activity.startTime & Activity.endTime"
          },
          {
            "identity": "rim",
            "map": "./effectiveTime[type=IVL_TS]"
          }
        ]
      },
      {
        "path": "Provenance.recorded",
        "short": "When the activity was recorded / updated",
        "definition": "The instant of time at which the activity was recorded.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Provenance.recorded",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "instant"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "unique(./participation[isNormalParticipation() and typeCode=AUT]/time[type=TS])"
          }
        ]
      },
      {
        "path": "Provenance.reason",
        "short": "Reason the activity is occurring",
        "definition": "The reason that the activity was taking place.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.reason",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Indicates the why the event occurred",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
          }
        },
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Activity.Activity"
          },
          {
            "identity": "rim",
            "map": "unique(./reasonCode)"
          }
        ]
      },
      {
        "path": "Provenance.activity",
        "short": "Activity that occurred",
        "definition": "An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.activity",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "CodeableConcept"
          }
        ],
        "binding": {
          "strength": "extensible",
          "description": "The activity took place.",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/v3-ProvenanceEventCurrentState"
          }
        },
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Activity.Activity"
          }
        ]
      },
      {
        "path": "Provenance.location",
        "short": "Where the activity occurred, if relevant",
        "definition": "Where the activity occurred, if relevant.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.location",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Location"
            ]
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Activity.location"
          },
          {
            "identity": "rim",
            "map": "unique(./participation[isNormalParticipation() and typeCode=LOC]/role[isNormalRole() and subsumes(SDLOC, classCode)]/player[isNormalEntity and classCode=\"LOC\" and determinerCode=\"INST\"]"
          }
        ]
      },
      {
        "path": "Provenance.policy",
        "short": "Policy or plan the activity was defined by",
        "definition": "Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.policy",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./inboundRelationship[isNormalActRelationship() and typeCode=\"SUBJ\"]/source[isNormalAct and subsumes(POLICY, classCode) and moodCode=EVN]/text[typeCode='ED'/tel"
          }
        ]
      },
      {
        "path": "Provenance.agent",
        "short": "Agents involved in creating resource",
        "definition": "An agent takes a role in an activity such that the agent can be assigned some degree of responsibility for the activity taking place. An agent can be a person, an organization, software, or other entities that may be ascribed responsibility.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.agent",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Agent"
          },
          {
            "identity": "rim",
            "map": "./participation[isNormalParticipation()]  OR  ./outboundRelationship[isNormalActRelationship() and typeCode='DRIV']"
          }
        ]
      },
      {
        "path": "Provenance.agent.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.agent.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Provenance.agent.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.agent.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Provenance.agent.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.agent.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Provenance.agent.role",
        "short": "Agents Role",
        "definition": "The function of the agent with respect to the activity.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Provenance.agent.role",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "The role that a provenance agent played with respect to the activity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/provenance-agent-role"
          }
        },
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Agent.Attribution"
          },
          {
            "identity": "rim",
            "map": "attester: .[self::participation]/typeCode='RESP' author: .[self::participation]/typeCode='AUT' cc: .[self::participation]/typeCode='IRCP' enterer:  .[self::participation]/typeCode='ENT' informant: .[self::participation]/typeCode='INF' performer: .[self::participation]/typeCode='PRF' verifier: .[self::participation]/typeCode='VRF' source: .[self::outboundRelationship]/typeCode=''"
          }
        ]
      },
      {
        "path": "Provenance.agent.actor",
        "short": "Individual, device or organization playing role",
        "definition": "The individual, device or organization that participated in the event.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.agent.actor",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Practitioner"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/RelatedPerson"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Patient"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Device"
            ]
          },
          {
            "code": "Reference",
            "profile": [
              "http://hl7.org/fhir/StructureDefinition/Organization"
            ]
          }
        ],
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Agent.Identity"
          }
        ]
      },
      {
        "path": "Provenance.agent.userId",
        "short": "Authorization-system identifier for the agent",
        "definition": "The identify of the agent as known by the authorization system.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.agent.userId",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "Identifier"
          }
        ]
      },
      {
        "path": "Provenance.entity",
        "short": "An entity used in this activity",
        "definition": "An entity used in this activity.",
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.entity",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "BackboneElement"
          }
        ],
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity"
          },
          {
            "identity": "rim",
            "map": "./subjectOf"
          }
        ]
      },
      {
        "path": "Provenance.entity.id",
        "representation": [
          "xmlAttr"
        ],
        "short": "xml:id (or equivalent in JSON)",
        "definition": "unique id for the element within a resource (for internal references).",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.entity.id",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "id"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Provenance.entity.extension",
        "short": "Additional Content defined by implementations",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element. In order to make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.",
        "alias": [
          "extensions",
          "user content"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.entity.extension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "mapping": [
          {
            "identity": "rim",
            "map": "n/a"
          }
        ]
      },
      {
        "path": "Provenance.entity.modifierExtension",
        "short": "Extensions that cannot be ignored",
        "definition": "May be used to represent additional information that is not part of the basic definition of the element, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. In order to make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.",
        "alias": [
          "extensions",
          "user content",
          "modifiers"
        ],
        "min": 0,
        "max": "*",
        "base": {
          "path": "Provenance.entity.modifierExtension",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Extension"
          }
        ],
        "isModifier": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "N/A"
          }
        ]
      },
      {
        "path": "Provenance.entity.role",
        "short": "derivation | revision | quotation | source",
        "definition": "How the entity was used during the activity.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Provenance.entity.role",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "code"
          }
        ],
        "binding": {
          "strength": "required",
          "description": "How an entity was used in an activity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/provenance-entity-role"
          }
        },
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity.role"
          },
          {
            "identity": "rim",
            "map": "./typeCode"
          }
        ]
      },
      {
        "path": "Provenance.entity.type",
        "short": "Entity Type",
        "definition": "The type of the entity. If the entity is a resource, then this is a resource type.",
        "requirements": "If the type is \"resource\" then the resource itself was the participant. If the type is a type of resource, then the entity identified by the resource is the participant.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Provenance.entity.type",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "Coding"
          }
        ],
        "binding": {
          "strength": "extensible",
          "description": "The type of an entity used in an activity",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/resource-types"
          }
        },
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity.type"
          },
          {
            "identity": "rim",
            "map": "./target"
          }
        ]
      },
      {
        "path": "Provenance.entity.reference",
        "short": "Identity of entity",
        "definition": "Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative.",
        "min": 1,
        "max": "1",
        "base": {
          "path": "Provenance.entity.reference",
          "min": 1,
          "max": "1"
        },
        "type": [
          {
            "code": "uri"
          }
        ],
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity.Identity"
          },
          {
            "identity": "rim",
            "map": "./text/reference"
          }
        ]
      },
      {
        "path": "Provenance.entity.display",
        "short": "Human description of entity",
        "definition": "Human-readable description of the entity.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.entity.display",
          "min": 0,
          "max": "1"
        },
        "type": [
          {
            "code": "string"
          }
        ],
        "mapping": [
          {
            "identity": "w3c.prov",
            "map": "Entity.Label"
          },
          {
            "identity": "rim",
            "map": "./title"
          }
        ]
      },
      {
        "path": "Provenance.entity.agent",
        "short": "Entity is attributed to this agent",
        "definition": "The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.entity.agent",
          "min": 0,
          "max": "1"
        },
        "nameReference": "agent",
        "mapping": [
          {
            "identity": "rim",
            "map": "./author/role"
          }
        ]
      },
      {
        "path": "Provenance.signature",
        "short": "Signature on target",
        "definition": "A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated.",
        "min": 0,
        "max": "1",
        "base": {
          "path": "Provenance.signature",
          "min": 0,
          "max": "*"
        },
        "type": [
          {
            "code": "Signature"
          }
        ],
        "mustSupport": true,
        "mapping": [
          {
            "identity": "rim",
            "map": "./signatureText"
          }
        ]
      }
    ]
  },
  "differential": {
    "element": [
      {
        "path": "Provenance",
        "name": "EHRProvenance",
        "min": 0,
        "max": "*",
        "type": [
          {
            "code": "Provenance"
          }
        ]
      },
      {
        "path": "Provenance.target",
        "min": 1,
        "max": "*",
        "mustSupport": true
      },
      {
        "path": "Provenance.period",
        "min": 0,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.recorded",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.reason",
        "min": 0,
        "max": "1",
        "mustSupport": true,
        "binding": {
          "strength": "extensible",
          "description": "Indicates the why the event occurred",
          "valueSetReference": {
            "reference": "http://hl7.org/fhir/ValueSet/v3-PurposeOfUse"
          }
        }
      },
      {
        "path": "Provenance.location",
        "min": 0,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.policy",
        "min": 0,
        "max": "*",
        "mustSupport": true
      },
      {
        "path": "Provenance.agent",
        "min": 0,
        "max": "*",
        "mustSupport": true
      },
      {
        "path": "Provenance.agent.display",
        "min": 0,
        "max": "1"
      },
      {
        "path": "Provenance.agent.reference",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.agent.type",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.agent.role",
        "min": 1,
        "max": "1",
        "mustSupport": true
      },
      {
        "path": "Provenance.entity",
        "min": 0,
        "max": "*"
      },
      {
        "path": "Provenance.entity.role",
        "min": 1,
        "max": "1"
      },
      {
        "path": "Provenance.entity.type",
        "min": 1,
        "max": "1"
      },
      {
        "path": "Provenance.entity.reference",
        "min": 1,
        "max": "1"
      },
      {
        "path": "Provenance.entity.display",
        "min": 0,
        "max": "1"
      },
      {
        "path": "Provenance.entity.agent",
        "min": 0,
        "max": "1"
      },
      {
        "path": "Provenance.signature",
        "min": 0,
        "max": "1",
        "mustSupport": true
      }
    ]
  }
}